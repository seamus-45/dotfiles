#!/bin/bash

### Curby's GeekTool process listing script (ps version)
### by Michael 'Curby' Lee
### v1.00.00, 2007-02-17

###   Description
#
#  Outputs a list of the most CPU-hungry and memory-hungry processes,
#  along with their process IDs, absolute processor time consumed
#  since the process started, and total resident memory size.
#
#  Compared to geektool-pstop and geektool-top, this runs faster by
#  a factor of 2, but because ps cannot sort on the total CPU time,
#  currently-idle CPU-hungry processes cannot be elevated up the list.
#

###   Suggested use
#
#  This script can be executed from the OS X commandline without
#  administrative priveleges, but is intended for use with GeekTool
#  with a refresh time of 10 seconds.  The number of processes
#  displayed can be customized below.  This script was tested on
#  OS X v10.4.8 with GeekTool v2.1.2(112).
#

###   License
#
#  Copyright (C) 2007  Michael Lee <kirbysdl@hotmail.com>
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#



#-------------------------------------------------------------------------------
#  Configuration
#-------------------------------------------------------------------------------
cpu_rows=10
mem_rows=8


#-------------------------------------------------------------------------------
#  Output
#-------------------------------------------------------------------------------
OS=$(uname)

if [[ $OS == "Darwin" ]]; then
    ps -c -r -ax -o command,pid,pcpu,time | sed 's/\(PID *\)%/\1 %/' | head -n $(($cpu_rows+1))
    echo
    ps -c -m -ax -o command,pid,pmem,rss=RSIZE | sed 's/\(.\{23\}\)/\1 /' | head -n $(($mem_rows+1))
else
    ps -eo cmd,fname,pid,pcpu,time --sort=-pcpu | head -n $(($cpu_rows+1))
    echo
    ps -eo cmd,fname,pid,pmem,rss --sort=-rss | head -n $(($mem_rows+1))
fi
